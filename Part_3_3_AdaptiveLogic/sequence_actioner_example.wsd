@startuml sequence_actioner_example

skinparam allow_mixing true
skinparam BackgroundColor white
skinparam ComponentStyle rectangle

skinparam SequenceGroup {
    BodyBackgroundColor AAAAAA
}

skinparam note {
    BackgroundColor white
    BorderColor black
    FontColor black
        FontSize 16
}

skinparam collections {
    BorderThickness 1
    RoundCorner 20
    StereotypeFontColor black
    FontStyle bold
    BackgroundColor white
    BorderColor black
    FontColor black
    BorderThickness 1
    RoundCorner 20


    BackgroundColor<<environment>> white
    BackgroundColor<<GlobalDataBlock>> CCCCCC
    BackgroundColor<<Function>> CCCCCC

}

skinparam InterfaceBorderColor Black
skinparam InterfaceBackgroundColor Black

skinparam SequenceLifeLine {
    FontColor black
    BorderColor black
    Thickness 2
}

skinparam SequenceGroupHeaderFontSize 16
skinparam ParticipantFontSize 16

skinparam Arrow {
    FontColor black
    Color black
    Thickness 2
        FontSize 16
}

collections "Inputs" as input
collections "Logics" as logic
collections "Outputs" as output

rnote over input : Filling Service Signals\n[4]:LevelSwitch\n[5]:ValvePosition\n[6]:StateInfo
/ rnote over output : Dosing Service Signals\n[7]:StateInfo\n[8]:PumpInterlock
...
group Interlock Signal from Filling Service

rnote over logic : FunctionType[5]\nSelector = '30' (AND)\nIN1 = 'Inputs'[4]\nIN2 = 'Inputs'[5]
/ rnote over output : OutputType[8]\nValue = 'Logics'[5]\n


input -> logic : IN1: references to Input[4] (Limit Switch)
activate logic
input -> logic : IN2: references to Input[5] (Valve Position)
logic -> output : Output is referenced to Logics[5]
deactivate logic

end
...

group if-then-rule between Filling and Dosing

rnote over logic : FunctionType[6]\nSelector = '101' (if-then-rule)\nIN1 = 'Inputs'[6]\nIN2 = 'Const':64 (Execute) \nIN3 = 'Const':4 (Start)\nIN4 = unused
/ rnote over output : OutputType[7]\nValue = 'Logics'[6]\n


input -> logic : IN1: references to Input[6]
activate logic
?-\ logic : IN2: monitored state\n(const) = Execute(64)
?-\ logic : IN3: command value\n(const) = Start(4)
logic -> output : Action = Start
deactivate logic

end
...

@enduml